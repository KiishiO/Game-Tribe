{"ast":null,"code":"// Handle place order\nconst handlePlaceOrder = async () => {\n  // Basic form validation\n  if (!validateForm()) {\n    return;\n  }\n  try {\n    // Create order data matching the backend schema\n    const orderData = {\n      orderNumber: `GT-${new Date().getFullYear()}-${Math.floor(Math.random() * 10000).toString().padStart(4, '0')}`,\n      items: cartItems.map(item => ({\n        // Include gameId for numeric IDs\n        gameId: item.id,\n        name: item.name,\n        price: item.price,\n        quantity: item.quantity,\n        image: item.image\n      })),\n      subtotal: parseFloat(subtotal.toFixed(2)),\n      tax: parseFloat(tax.toFixed(2)),\n      total: parseFloat(total.toFixed(2)),\n      shippingInfo: {\n        ...shippingInfo\n      },\n      paymentMethod: paymentInfo.method\n    };\n\n    // Save order using the auth context's addOrder\n    const savedOrder = await addOrder(orderData);\n\n    // Set order details for confirmation\n    setOrderDetails(savedOrder);\n    setOrderNumber(savedOrder.orderNumber);\n\n    // Close checkout modal and show confirmation\n    setShowCheckoutModal(false);\n    setTimeout(() => {\n      setShowConfirmationModal(true);\n      clearCart();\n    }, 500);\n  } catch (error) {\n    console.error('Order placement error:', error);\n    alert(error.message || 'Failed to place order. Please try again.');\n  }\n};","map":{"version":3,"names":["handlePlaceOrder","validateForm","orderData","orderNumber","Date","getFullYear","Math","floor","random","toString","padStart","items","cartItems","map","item","gameId","id","name","price","quantity","image","subtotal","parseFloat","toFixed","tax","total","shippingInfo","paymentMethod","paymentInfo","method","savedOrder","addOrder","setOrderDetails","setOrderNumber","setShowCheckoutModal","setTimeout","setShowConfirmationModal","clearCart","error","console","alert","message"],"sources":["C:/se_319/Final_Git/MN_5/Frontend/gametribe/src/pages/Cart.jsx"],"sourcesContent":["// Handle place order\r\nconst handlePlaceOrder = async () => {\r\n  // Basic form validation\r\n  if (!validateForm()) {\r\n    return;\r\n  }\r\n  \r\n  try {\r\n    // Create order data matching the backend schema\r\n    const orderData = {\r\n      orderNumber: `GT-${new Date().getFullYear()}-${Math.floor(Math.random() * 10000).toString().padStart(4, '0')}`,\r\n      items: cartItems.map(item => ({\r\n        // Include gameId for numeric IDs\r\n        gameId: item.id,\r\n        name: item.name,\r\n        price: item.price,\r\n        quantity: item.quantity,\r\n        image: item.image\r\n      })),\r\n      subtotal: parseFloat(subtotal.toFixed(2)),\r\n      tax: parseFloat(tax.toFixed(2)),\r\n      total: parseFloat(total.toFixed(2)),\r\n      shippingInfo: { ...shippingInfo },\r\n      paymentMethod: paymentInfo.method\r\n    };\r\n    \r\n    // Save order using the auth context's addOrder\r\n    const savedOrder = await addOrder(orderData);\r\n    \r\n    // Set order details for confirmation\r\n    setOrderDetails(savedOrder);\r\n    setOrderNumber(savedOrder.orderNumber);\r\n    \r\n    // Close checkout modal and show confirmation\r\n    setShowCheckoutModal(false);\r\n    setTimeout(() => {\r\n      setShowConfirmationModal(true);\r\n      clearCart();\r\n    }, 500);\r\n  } catch (error) {\r\n    console.error('Order placement error:', error);\r\n    alert(error.message || 'Failed to place order. Please try again.');\r\n  }\r\n};"],"mappings":"AAAA;AACA,MAAMA,gBAAgB,GAAG,MAAAA,CAAA,KAAY;EACnC;EACA,IAAI,CAACC,YAAY,CAAC,CAAC,EAAE;IACnB;EACF;EAEA,IAAI;IACF;IACA,MAAMC,SAAS,GAAG;MAChBC,WAAW,EAAE,MAAM,IAAIC,IAAI,CAAC,CAAC,CAACC,WAAW,CAAC,CAAC,IAAIC,IAAI,CAACC,KAAK,CAACD,IAAI,CAACE,MAAM,CAAC,CAAC,GAAG,KAAK,CAAC,CAACC,QAAQ,CAAC,CAAC,CAACC,QAAQ,CAAC,CAAC,EAAE,GAAG,CAAC,EAAE;MAC9GC,KAAK,EAAEC,SAAS,CAACC,GAAG,CAACC,IAAI,KAAK;QAC5B;QACAC,MAAM,EAAED,IAAI,CAACE,EAAE;QACfC,IAAI,EAAEH,IAAI,CAACG,IAAI;QACfC,KAAK,EAAEJ,IAAI,CAACI,KAAK;QACjBC,QAAQ,EAAEL,IAAI,CAACK,QAAQ;QACvBC,KAAK,EAAEN,IAAI,CAACM;MACd,CAAC,CAAC,CAAC;MACHC,QAAQ,EAAEC,UAAU,CAACD,QAAQ,CAACE,OAAO,CAAC,CAAC,CAAC,CAAC;MACzCC,GAAG,EAAEF,UAAU,CAACE,GAAG,CAACD,OAAO,CAAC,CAAC,CAAC,CAAC;MAC/BE,KAAK,EAAEH,UAAU,CAACG,KAAK,CAACF,OAAO,CAAC,CAAC,CAAC,CAAC;MACnCG,YAAY,EAAE;QAAE,GAAGA;MAAa,CAAC;MACjCC,aAAa,EAAEC,WAAW,CAACC;IAC7B,CAAC;;IAED;IACA,MAAMC,UAAU,GAAG,MAAMC,QAAQ,CAAC7B,SAAS,CAAC;;IAE5C;IACA8B,eAAe,CAACF,UAAU,CAAC;IAC3BG,cAAc,CAACH,UAAU,CAAC3B,WAAW,CAAC;;IAEtC;IACA+B,oBAAoB,CAAC,KAAK,CAAC;IAC3BC,UAAU,CAAC,MAAM;MACfC,wBAAwB,CAAC,IAAI,CAAC;MAC9BC,SAAS,CAAC,CAAC;IACb,CAAC,EAAE,GAAG,CAAC;EACT,CAAC,CAAC,OAAOC,KAAK,EAAE;IACdC,OAAO,CAACD,KAAK,CAAC,wBAAwB,EAAEA,KAAK,CAAC;IAC9CE,KAAK,CAACF,KAAK,CAACG,OAAO,IAAI,0CAA0C,CAAC;EACpE;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}