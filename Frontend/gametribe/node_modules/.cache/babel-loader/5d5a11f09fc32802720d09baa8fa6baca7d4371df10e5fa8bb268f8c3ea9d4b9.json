{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\fuchi\\\\OneDrive\\\\Desktop\\\\SE 319\\\\final-project\\\\MN_5\\\\Frontend\\\\gametribe\\\\src\\\\context\\\\CartContext.jsx\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useState, useEffect, useContext } from 'react';\nimport axios from 'axios';\n\n// API URL\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst API_URL = process.env.REACT_APP_API_URL || 'http://localhost:5000/api';\n\n// Create the context\nconst CartContext = /*#__PURE__*/createContext();\n\n// Custom hook to use the cart context\nexport const useCart = () => {\n  _s();\n  return useContext(CartContext);\n};\n\n// Provider component\n_s(useCart, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\nexport const CartProvider = ({\n  children\n}) => {\n  _s2();\n  const [cartItems, setCartItems] = useState([]);\n  const [recentlyViewed, setRecentlyViewed] = useState([]);\n\n  // Load cart from localStorage on component mount\n  useEffect(() => {\n    const storedCart = localStorage.getItem('cart');\n    const storedRecentlyViewed = localStorage.getItem('recentlyViewed');\n    if (storedCart) setCartItems(JSON.parse(storedCart));\n    if (storedRecentlyViewed) setRecentlyViewed(JSON.parse(storedRecentlyViewed));\n  }, []);\n\n  // Save cart to localStorage whenever it changes\n  useEffect(() => {\n    localStorage.setItem('cart', JSON.stringify(cartItems));\n  }, [cartItems]);\n\n  // Save recently viewed to localStorage whenever it changes\n  useEffect(() => {\n    localStorage.setItem('recentlyViewed', JSON.stringify(recentlyViewed));\n  }, [recentlyViewed]);\n\n  // Add item to cart\n  const addToCart = async game => {\n    try {\n      // Check if the game data is complete\n      if (!game.id && game._id) {\n        // If using MongoDB _id, convert to id for consistency\n        game.id = game._id;\n      }\n\n      // Check if item already in cart\n      const existingItemIndex = cartItems.findIndex(item => item.id === game.id);\n      if (existingItemIndex > -1) {\n        // Update quantity if item exists\n        const updatedItems = [...cartItems];\n        updatedItems[existingItemIndex] = {\n          ...updatedItems[existingItemIndex],\n          quantity: updatedItems[existingItemIndex].quantity + 1\n        };\n        setCartItems(updatedItems);\n      } else {\n        // Add new item with quantity 1\n        setCartItems([...cartItems, {\n          ...game,\n          quantity: 1\n        }]);\n      }\n\n      // Show notification\n      showNotification(`${game.name} has been added to your cart!`);\n      return true;\n    } catch (err) {\n      console.error('Error adding to cart:', err);\n      return false;\n    }\n  };\n\n  // Remove item from cart\n  const removeFromCart = id => {\n    setCartItems(prevItems => prevItems.filter(item => item.id !== id));\n  };\n\n  // Update item quantity\n  const updateQuantity = (id, quantity) => {\n    if (quantity < 1) {\n      removeFromCart(id);\n      return;\n    }\n    setCartItems(prevItems => prevItems.map(item => item.id === id ? {\n      ...item,\n      quantity\n    } : item));\n  };\n\n  // Clear cart\n  const clearCart = () => {\n    setCartItems([]);\n  };\n\n  // Add to recently viewed\n  const addToRecentlyViewed = async game => {\n    try {\n      // Check if the game data is complete\n      if (!game.id && game._id) {\n        // If using MongoDB _id, convert to id for consistency\n        game.id = game._id;\n      }\n      setRecentlyViewed(prevItems => {\n        // Remove if already in list\n        const filteredItems = prevItems.filter(item => item.id !== game.id);\n\n        // Add to beginning of array and keep only most recent 4\n        return [game, ...filteredItems].slice(0, 4);\n      });\n      return true;\n    } catch (err) {\n      console.error('Error adding to recently viewed:', err);\n      return false;\n    }\n  };\n\n  // Show notification\n  const showNotification = message => {\n    const notification = document.createElement('div');\n    notification.classList.add('toast', 'show', 'position-fixed', 'bottom-0', 'end-0', 'm-3');\n    notification.setAttribute('role', 'alert');\n    notification.setAttribute('aria-live', 'assertive');\n    notification.setAttribute('aria-atomic', 'true');\n    notification.innerHTML = `\n      <div class=\"toast-header bg-success text-white\">\n        <strong class=\"me-auto\">Cart Updated</strong>\n        <button type=\"button\" class=\"btn-close btn-close-white\" data-bs-dismiss=\"toast\" aria-label=\"Close\"></button>\n      </div>\n      <div class=\"toast-body\">\n        ${message}\n      </div>\n    `;\n    document.body.appendChild(notification);\n\n    // Remove notification after 3 seconds\n    setTimeout(() => {\n      notification.remove();\n    }, 3000);\n  };\n\n  // Calculate cart total\n  const getCartTotal = () => {\n    return cartItems.reduce((total, item) => total + item.price * item.quantity, 0);\n  };\n\n  // Get cart item count\n  const getCartCount = () => {\n    return cartItems.reduce((count, item) => count + item.quantity, 0);\n  };\n\n  // Fetch games from API\n  const fetchGames = async () => {\n    try {\n      const response = await axios.get(`${API_URL}/games`);\n      return response.data;\n    } catch (err) {\n      console.error('Error fetching games:', err);\n      return [];\n    }\n  };\n\n  // Fetch game by ID from API\n  const fetchGameById = async id => {\n    try {\n      const response = await axios.get(`${API_URL}/games/${id}`);\n      return response.data;\n    } catch (err) {\n      console.error(`Error fetching game with ID ${id}:`, err);\n      return null;\n    }\n  };\n\n  // Fetch new releases from API\n  const fetchNewReleases = async () => {\n    try {\n      const response = await axios.get(`${API_URL}/games/new-releases`);\n      return response.data;\n    } catch (err) {\n      console.error('Error fetching new releases:', err);\n      return [];\n    }\n  };\n\n  // Fetch popular games from API\n  const fetchPopularGames = async () => {\n    try {\n      const response = await axios.get(`${API_URL}/games/popular`);\n      return response.data;\n    } catch (err) {\n      console.error('Error fetching popular games:', err);\n      return [];\n    }\n  };\n\n  // Context value\n  const value = {\n    cartItems,\n    recentlyViewed,\n    addToCart,\n    removeFromCart,\n    updateQuantity,\n    clearCart,\n    addToRecentlyViewed,\n    getCartTotal,\n    getCartCount,\n    fetchGames,\n    fetchGameById,\n    fetchNewReleases,\n    fetchPopularGames\n  };\n  return /*#__PURE__*/_jsxDEV(CartContext.Provider, {\n    value: value,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 218,\n    columnNumber: 5\n  }, this);\n};\n_s2(CartProvider, \"CSuOa5ssQlE60rgQYRGMX2rDkLY=\");\n_c = CartProvider;\nexport default CartProvider;\nvar _c;\n$RefreshReg$(_c, \"CartProvider\");","map":{"version":3,"names":["React","createContext","useState","useEffect","useContext","axios","jsxDEV","_jsxDEV","API_URL","process","env","REACT_APP_API_URL","CartContext","useCart","_s","CartProvider","children","_s2","cartItems","setCartItems","recentlyViewed","setRecentlyViewed","storedCart","localStorage","getItem","storedRecentlyViewed","JSON","parse","setItem","stringify","addToCart","game","id","_id","existingItemIndex","findIndex","item","updatedItems","quantity","showNotification","name","err","console","error","removeFromCart","prevItems","filter","updateQuantity","map","clearCart","addToRecentlyViewed","filteredItems","slice","message","notification","document","createElement","classList","add","setAttribute","innerHTML","body","appendChild","setTimeout","remove","getCartTotal","reduce","total","price","getCartCount","count","fetchGames","response","get","data","fetchGameById","fetchNewReleases","fetchPopularGames","value","Provider","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/fuchi/OneDrive/Desktop/SE 319/final-project/MN_5/Frontend/gametribe/src/context/CartContext.jsx"],"sourcesContent":["import React, { createContext, useState, useEffect, useContext } from 'react';\r\nimport axios from 'axios';\r\n\r\n// API URL\r\nconst API_URL = process.env.REACT_APP_API_URL || 'http://localhost:5000/api';\r\n\r\n// Create the context\r\nconst CartContext = createContext();\r\n\r\n// Custom hook to use the cart context\r\nexport const useCart = () => {\r\n  return useContext(CartContext);\r\n};\r\n\r\n// Provider component\r\nexport const CartProvider = ({ children }) => {\r\n  const [cartItems, setCartItems] = useState([]);\r\n  const [recentlyViewed, setRecentlyViewed] = useState([]);\r\n  \r\n  // Load cart from localStorage on component mount\r\n  useEffect(() => {\r\n    const storedCart = localStorage.getItem('cart');\r\n    const storedRecentlyViewed = localStorage.getItem('recentlyViewed');\r\n    \r\n    if (storedCart) setCartItems(JSON.parse(storedCart));\r\n    if (storedRecentlyViewed) setRecentlyViewed(JSON.parse(storedRecentlyViewed));\r\n  }, []);\r\n  \r\n  // Save cart to localStorage whenever it changes\r\n  useEffect(() => {\r\n    localStorage.setItem('cart', JSON.stringify(cartItems));\r\n  }, [cartItems]);\r\n  \r\n  // Save recently viewed to localStorage whenever it changes\r\n  useEffect(() => {\r\n    localStorage.setItem('recentlyViewed', JSON.stringify(recentlyViewed));\r\n  }, [recentlyViewed]);\r\n  \r\n  // Add item to cart\r\n  const addToCart = async (game) => {\r\n    try {\r\n      // Check if the game data is complete\r\n      if (!game.id && game._id) {\r\n        // If using MongoDB _id, convert to id for consistency\r\n        game.id = game._id;\r\n      }\r\n      \r\n      // Check if item already in cart\r\n      const existingItemIndex = cartItems.findIndex(item => item.id === game.id);\r\n      \r\n      if (existingItemIndex > -1) {\r\n        // Update quantity if item exists\r\n        const updatedItems = [...cartItems];\r\n        updatedItems[existingItemIndex] = {\r\n          ...updatedItems[existingItemIndex],\r\n          quantity: updatedItems[existingItemIndex].quantity + 1\r\n        };\r\n        setCartItems(updatedItems);\r\n      } else {\r\n        // Add new item with quantity 1\r\n        setCartItems([...cartItems, { ...game, quantity: 1 }]);\r\n      }\r\n      \r\n      // Show notification\r\n      showNotification(`${game.name} has been added to your cart!`);\r\n      \r\n      return true;\r\n    } catch (err) {\r\n      console.error('Error adding to cart:', err);\r\n      return false;\r\n    }\r\n  };\r\n  \r\n  // Remove item from cart\r\n  const removeFromCart = (id) => {\r\n    setCartItems(prevItems => prevItems.filter(item => item.id !== id));\r\n  };\r\n  \r\n  // Update item quantity\r\n  const updateQuantity = (id, quantity) => {\r\n    if (quantity < 1) {\r\n      removeFromCart(id);\r\n      return;\r\n    }\r\n    \r\n    setCartItems(prevItems => \r\n      prevItems.map(item => \r\n        item.id === id ? { ...item, quantity } : item\r\n      )\r\n    );\r\n  };\r\n  \r\n  // Clear cart\r\n  const clearCart = () => {\r\n    setCartItems([]);\r\n  };\r\n  \r\n  // Add to recently viewed\r\n  const addToRecentlyViewed = async (game) => {\r\n    try {\r\n      // Check if the game data is complete\r\n      if (!game.id && game._id) {\r\n        // If using MongoDB _id, convert to id for consistency\r\n        game.id = game._id;\r\n      }\r\n      \r\n      setRecentlyViewed(prevItems => {\r\n        // Remove if already in list\r\n        const filteredItems = prevItems.filter(item => item.id !== game.id);\r\n        \r\n        // Add to beginning of array and keep only most recent 4\r\n        return [game, ...filteredItems].slice(0, 4);\r\n      });\r\n      \r\n      return true;\r\n    } catch (err) {\r\n      console.error('Error adding to recently viewed:', err);\r\n      return false;\r\n    }\r\n  };\r\n  \r\n  // Show notification\r\n  const showNotification = (message) => {\r\n    const notification = document.createElement('div');\r\n    notification.classList.add('toast', 'show', 'position-fixed', 'bottom-0', 'end-0', 'm-3');\r\n    notification.setAttribute('role', 'alert');\r\n    notification.setAttribute('aria-live', 'assertive');\r\n    notification.setAttribute('aria-atomic', 'true');\r\n    notification.innerHTML = `\r\n      <div class=\"toast-header bg-success text-white\">\r\n        <strong class=\"me-auto\">Cart Updated</strong>\r\n        <button type=\"button\" class=\"btn-close btn-close-white\" data-bs-dismiss=\"toast\" aria-label=\"Close\"></button>\r\n      </div>\r\n      <div class=\"toast-body\">\r\n        ${message}\r\n      </div>\r\n    `;\r\n    document.body.appendChild(notification);\r\n    \r\n    // Remove notification after 3 seconds\r\n    setTimeout(() => {\r\n      notification.remove();\r\n    }, 3000);\r\n  };\r\n  \r\n  // Calculate cart total\r\n  const getCartTotal = () => {\r\n    return cartItems.reduce((total, item) => total + item.price * item.quantity, 0);\r\n  };\r\n  \r\n  // Get cart item count\r\n  const getCartCount = () => {\r\n    return cartItems.reduce((count, item) => count + item.quantity, 0);\r\n  };\r\n  \r\n  // Fetch games from API\r\n  const fetchGames = async () => {\r\n    try {\r\n      const response = await axios.get(`${API_URL}/games`);\r\n      return response.data;\r\n    } catch (err) {\r\n      console.error('Error fetching games:', err);\r\n      return [];\r\n    }\r\n  };\r\n  \r\n  // Fetch game by ID from API\r\n  const fetchGameById = async (id) => {\r\n    try {\r\n      const response = await axios.get(`${API_URL}/games/${id}`);\r\n      return response.data;\r\n    } catch (err) {\r\n      console.error(`Error fetching game with ID ${id}:`, err);\r\n      return null;\r\n    }\r\n  };\r\n  \r\n  // Fetch new releases from API\r\n  const fetchNewReleases = async () => {\r\n    try {\r\n      const response = await axios.get(`${API_URL}/games/new-releases`);\r\n      return response.data;\r\n    } catch (err) {\r\n      console.error('Error fetching new releases:', err);\r\n      return [];\r\n    }\r\n  };\r\n  \r\n  // Fetch popular games from API\r\n  const fetchPopularGames = async () => {\r\n    try {\r\n      const response = await axios.get(`${API_URL}/games/popular`);\r\n      return response.data;\r\n    } catch (err) {\r\n      console.error('Error fetching popular games:', err);\r\n      return [];\r\n    }\r\n  };\r\n  \r\n  // Context value\r\n  const value = {\r\n    cartItems,\r\n    recentlyViewed,\r\n    addToCart,\r\n    removeFromCart,\r\n    updateQuantity,\r\n    clearCart,\r\n    addToRecentlyViewed,\r\n    getCartTotal,\r\n    getCartCount,\r\n    fetchGames,\r\n    fetchGameById,\r\n    fetchNewReleases,\r\n    fetchPopularGames\r\n  };\r\n  \r\n  return (\r\n    <CartContext.Provider value={value}>\r\n      {children}\r\n    </CartContext.Provider>\r\n  );\r\n};\r\n\r\nexport default CartProvider;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}