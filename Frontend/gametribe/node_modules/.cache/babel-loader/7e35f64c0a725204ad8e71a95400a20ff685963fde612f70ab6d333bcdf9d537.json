{"ast":null,"code":"var _jsxFileName = \"C:\\\\se_319\\\\Final_Git\\\\MN_5\\\\Frontend\\\\gametribe\\\\src\\\\context\\\\AuthContext.jsx\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useState, useEffect, useContext } from 'react';\nimport axios from 'axios';\n\n// API URL\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst API_URL = process.env.REACT_APP_API_URL || 'http://localhost:5000';\n\n// Create the auth context\nconst AuthContext = /*#__PURE__*/createContext();\n\n// Custom hook to use the auth context\nexport const useAuth = () => {\n  _s();\n  return useContext(AuthContext);\n};\n\n// Provider component\n_s(useAuth, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\nexport const AuthProvider = ({\n  children\n}) => {\n  _s2();\n  const [currentUser, setCurrentUser] = useState(null);\n  const [loading, setLoading] = useState(true);\n  const [isAuthenticated, setIsAuthenticated] = useState(false);\n  const [error, setError] = useState(null);\n  const [token, setToken] = useState(localStorage.getItem('token'));\n\n  // Set default auth header for all axios requests\n  useEffect(() => {\n    if (token) {\n      axios.defaults.headers.common['x-auth-token'] = token;\n    } else {\n      delete axios.defaults.headers.common['x-auth-token'];\n    }\n  }, [token]);\n\n  // Load user data when token changes\n  useEffect(() => {\n    const loadUser = async () => {\n      if (!token) {\n        setCurrentUser(null);\n        setIsAuthenticated(false);\n        setLoading(false);\n        return;\n      }\n      try {\n        setLoading(true);\n        const res = await axios.get(`${API_URL}/api/auth/user`);\n        if (res.data) {\n          setCurrentUser(res.data);\n          setIsAuthenticated(true);\n        }\n      } catch (err) {\n        var _err$response, _err$response$data, _err$response2, _err$response2$data;\n        console.error('Error loading user:', ((_err$response = err.response) === null || _err$response === void 0 ? void 0 : (_err$response$data = _err$response.data) === null || _err$response$data === void 0 ? void 0 : _err$response$data.message) || err.message);\n        localStorage.removeItem('token');\n        setToken(null);\n        setCurrentUser(null);\n        setIsAuthenticated(false);\n        setError(((_err$response2 = err.response) === null || _err$response2 === void 0 ? void 0 : (_err$response2$data = _err$response2.data) === null || _err$response2$data === void 0 ? void 0 : _err$response2$data.message) || 'Authentication error. Please login again.');\n      } finally {\n        setLoading(false);\n      }\n    };\n    loadUser();\n  }, [token]);\n\n  // Register a new user\n  const register = async (email, password, displayName, profileImage = '/assets/myotherimages/player_01.jpg') => {\n    try {\n      setLoading(true);\n      setError(null);\n      const res = await axios.post(`${API_URL}/api/auth/register`, {\n        email,\n        password,\n        displayName,\n        profileImage\n      });\n\n      // Save token to localStorage\n      localStorage.setItem('token', res.data.token);\n      setToken(res.data.token);\n\n      // Set current user and authenticate\n      setCurrentUser(res.data.user);\n      setIsAuthenticated(true);\n      return res.data.user;\n    } catch (err) {\n      var _err$response3, _err$response3$data, _err$response4, _err$response4$data, _err$response5, _err$response5$data;\n      console.error('Registration error:', ((_err$response3 = err.response) === null || _err$response3 === void 0 ? void 0 : (_err$response3$data = _err$response3.data) === null || _err$response3$data === void 0 ? void 0 : _err$response3$data.message) || err.message);\n      setError(((_err$response4 = err.response) === null || _err$response4 === void 0 ? void 0 : (_err$response4$data = _err$response4.data) === null || _err$response4$data === void 0 ? void 0 : _err$response4$data.message) || 'Registration failed. Please try again.');\n      throw new Error(((_err$response5 = err.response) === null || _err$response5 === void 0 ? void 0 : (_err$response5$data = _err$response5.data) === null || _err$response5$data === void 0 ? void 0 : _err$response5$data.message) || 'Registration failed. Please try again.');\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  // Login an existing user\n  const login = async (email, password) => {\n    try {\n      setLoading(true);\n      setError(null);\n      const res = await axios.post(`${API_URL}/api/auth/login`, {\n        email,\n        password\n      });\n\n      // Save token to localStorage\n      localStorage.setItem('token', res.data.token);\n      setToken(res.data.token);\n\n      // Set current user and authenticate\n      setCurrentUser(res.data.user);\n      setIsAuthenticated(true);\n      return res.data.user;\n    } catch (err) {\n      var _err$response6, _err$response6$data, _err$response7, _err$response7$data, _err$response8, _err$response8$data;\n      console.error('Login error:', ((_err$response6 = err.response) === null || _err$response6 === void 0 ? void 0 : (_err$response6$data = _err$response6.data) === null || _err$response6$data === void 0 ? void 0 : _err$response6$data.message) || err.message);\n      setError(((_err$response7 = err.response) === null || _err$response7 === void 0 ? void 0 : (_err$response7$data = _err$response7.data) === null || _err$response7$data === void 0 ? void 0 : _err$response7$data.message) || 'Login failed. Please check your credentials.');\n      throw new Error(((_err$response8 = err.response) === null || _err$response8 === void 0 ? void 0 : (_err$response8$data = _err$response8.data) === null || _err$response8$data === void 0 ? void 0 : _err$response8$data.message) || 'Login failed. Please check your credentials.');\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  // Logout the current user\n  const logout = () => {\n    // Remove token from localStorage\n    localStorage.removeItem('token');\n    setToken(null);\n\n    // Clear user state\n    setCurrentUser(null);\n    setIsAuthenticated(false);\n  };\n\n  // Update user profile\n  const updateProfile = async updates => {\n    try {\n      setLoading(true);\n      setError(null);\n      const res = await axios.put(`${API_URL}/api/users/profile`, updates);\n\n      // Update user in state\n      setCurrentUser(res.data);\n      return res.data;\n    } catch (err) {\n      var _err$response9, _err$response9$data, _err$response0, _err$response0$data, _err$response1, _err$response1$data;\n      console.error('Profile update error:', ((_err$response9 = err.response) === null || _err$response9 === void 0 ? void 0 : (_err$response9$data = _err$response9.data) === null || _err$response9$data === void 0 ? void 0 : _err$response9$data.message) || err.message);\n      setError(((_err$response0 = err.response) === null || _err$response0 === void 0 ? void 0 : (_err$response0$data = _err$response0.data) === null || _err$response0$data === void 0 ? void 0 : _err$response0$data.message) || 'Failed to update profile. Please try again.');\n      throw new Error(((_err$response1 = err.response) === null || _err$response1 === void 0 ? void 0 : (_err$response1$data = _err$response1.data) === null || _err$response1$data === void 0 ? void 0 : _err$response1$data.message) || 'Failed to update profile. Please try again.');\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  // Get user's orders - only if authenticated\n  const getUserOrders = async () => {\n    if (!isAuthenticated || !token) {\n      return [];\n    }\n    try {\n      const res = await axios.get(`${API_URL}/api/orders`);\n      return res.data;\n    } catch (err) {\n      var _err$response10, _err$response10$data;\n      console.error('Error fetching orders:', ((_err$response10 = err.response) === null || _err$response10 === void 0 ? void 0 : (_err$response10$data = _err$response10.data) === null || _err$response10$data === void 0 ? void 0 : _err$response10$data.message) || err.message);\n      // Return empty array instead of throwing error\n      return [];\n    }\n  };\n\n  // Add a new order\n  const addOrder = async orderData => {\n    try {\n      setError(null);\n      const res = await axios.post(`${API_URL}/api/orders`, orderData);\n      return res.data;\n    } catch (err) {\n      var _err$response11, _err$response11$data, _err$response12, _err$response12$data, _err$response13, _err$response13$data;\n      console.error('Order creation error:', ((_err$response11 = err.response) === null || _err$response11 === void 0 ? void 0 : (_err$response11$data = _err$response11.data) === null || _err$response11$data === void 0 ? void 0 : _err$response11$data.message) || err.message);\n      setError(((_err$response12 = err.response) === null || _err$response12 === void 0 ? void 0 : (_err$response12$data = _err$response12.data) === null || _err$response12$data === void 0 ? void 0 : _err$response12$data.message) || 'Failed to place order. Please try again.');\n      throw new Error(((_err$response13 = err.response) === null || _err$response13 === void 0 ? void 0 : (_err$response13$data = _err$response13.data) === null || _err$response13$data === void 0 ? void 0 : _err$response13$data.message) || 'Failed to place order. Please try again.');\n    }\n  };\n\n  // Add a game to favorites\n  const addToFavorites = async gameId => {\n    try {\n      setError(null);\n      const res = await axios.post(`${API_URL}/api/users/favorite/${gameId}`);\n\n      // Update user in state to reflect new favorites\n      const updatedUser = await axios.get(`${API_URL}/api/auth/user`);\n      setCurrentUser(updatedUser.data);\n      return res.data;\n    } catch (err) {\n      var _err$response14, _err$response14$data, _err$response15, _err$response15$data, _err$response16, _err$response16$data;\n      console.error('Error adding to favorites:', ((_err$response14 = err.response) === null || _err$response14 === void 0 ? void 0 : (_err$response14$data = _err$response14.data) === null || _err$response14$data === void 0 ? void 0 : _err$response14$data.message) || err.message);\n      setError(((_err$response15 = err.response) === null || _err$response15 === void 0 ? void 0 : (_err$response15$data = _err$response15.data) === null || _err$response15$data === void 0 ? void 0 : _err$response15$data.message) || 'Failed to add game to favorites. Please try again.');\n      throw new Error(((_err$response16 = err.response) === null || _err$response16 === void 0 ? void 0 : (_err$response16$data = _err$response16.data) === null || _err$response16$data === void 0 ? void 0 : _err$response16$data.message) || 'Failed to add game to favorites. Please try again.');\n    }\n  };\n\n  // Remove a game from favorites\n  const removeFromFavorites = async gameId => {\n    try {\n      setError(null);\n      const res = await axios.delete(`${API_URL}/api/users/favorite/${gameId}`);\n\n      // Update user in state to reflect updated favorites\n      const updatedUser = await axios.get(`${API_URL}/api/auth/user`);\n      setCurrentUser(updatedUser.data);\n      return res.data;\n    } catch (err) {\n      var _err$response17, _err$response17$data, _err$response18, _err$response18$data, _err$response19, _err$response19$data;\n      console.error('Error removing from favorites:', ((_err$response17 = err.response) === null || _err$response17 === void 0 ? void 0 : (_err$response17$data = _err$response17.data) === null || _err$response17$data === void 0 ? void 0 : _err$response17$data.message) || err.message);\n      setError(((_err$response18 = err.response) === null || _err$response18 === void 0 ? void 0 : (_err$response18$data = _err$response18.data) === null || _err$response18$data === void 0 ? void 0 : _err$response18$data.message) || 'Failed to remove game from favorites. Please try again.');\n      throw new Error(((_err$response19 = err.response) === null || _err$response19 === void 0 ? void 0 : (_err$response19$data = _err$response19.data) === null || _err$response19$data === void 0 ? void 0 : _err$response19$data.message) || 'Failed to remove game from favorites. Please try again.');\n    }\n  };\n\n  // Change password\n  const changePassword = async (currentPassword, newPassword) => {\n    try {\n      setError(null);\n      const res = await axios.put(`${API_URL}/api/users/password`, {\n        currentPassword,\n        newPassword\n      });\n      return res.data;\n    } catch (err) {\n      var _err$response20, _err$response20$data, _err$response21, _err$response21$data, _err$response22, _err$response22$data;\n      console.error('Password change error:', ((_err$response20 = err.response) === null || _err$response20 === void 0 ? void 0 : (_err$response20$data = _err$response20.data) === null || _err$response20$data === void 0 ? void 0 : _err$response20$data.message) || err.message);\n      setError(((_err$response21 = err.response) === null || _err$response21 === void 0 ? void 0 : (_err$response21$data = _err$response21.data) === null || _err$response21$data === void 0 ? void 0 : _err$response21$data.message) || 'Failed to change password. Please try again.');\n      throw new Error(((_err$response22 = err.response) === null || _err$response22 === void 0 ? void 0 : (_err$response22$data = _err$response22.data) === null || _err$response22$data === void 0 ? void 0 : _err$response22$data.message) || 'Failed to change password. Please try again.');\n    }\n  };\n\n  // Context value\n  const value = {\n    currentUser,\n    isAuthenticated,\n    loading,\n    error,\n    register,\n    login,\n    logout,\n    updateProfile,\n    getUserOrders,\n    addOrder,\n    addToFavorites,\n    removeFromFavorites,\n    changePassword\n  };\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: value,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 262,\n    columnNumber: 5\n  }, this);\n};\n_s2(AuthProvider, \"VhZL39blFXXbxOKExXIAlm1MfJE=\");\n_c = AuthProvider;\nexport default AuthProvider;\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["React","createContext","useState","useEffect","useContext","axios","jsxDEV","_jsxDEV","API_URL","process","env","REACT_APP_API_URL","AuthContext","useAuth","_s","AuthProvider","children","_s2","currentUser","setCurrentUser","loading","setLoading","isAuthenticated","setIsAuthenticated","error","setError","token","setToken","localStorage","getItem","defaults","headers","common","loadUser","res","get","data","err","_err$response","_err$response$data","_err$response2","_err$response2$data","console","response","message","removeItem","register","email","password","displayName","profileImage","post","setItem","user","_err$response3","_err$response3$data","_err$response4","_err$response4$data","_err$response5","_err$response5$data","Error","login","_err$response6","_err$response6$data","_err$response7","_err$response7$data","_err$response8","_err$response8$data","logout","updateProfile","updates","put","_err$response9","_err$response9$data","_err$response0","_err$response0$data","_err$response1","_err$response1$data","getUserOrders","_err$response10","_err$response10$data","addOrder","orderData","_err$response11","_err$response11$data","_err$response12","_err$response12$data","_err$response13","_err$response13$data","addToFavorites","gameId","updatedUser","_err$response14","_err$response14$data","_err$response15","_err$response15$data","_err$response16","_err$response16$data","removeFromFavorites","delete","_err$response17","_err$response17$data","_err$response18","_err$response18$data","_err$response19","_err$response19$data","changePassword","currentPassword","newPassword","_err$response20","_err$response20$data","_err$response21","_err$response21$data","_err$response22","_err$response22$data","value","Provider","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/se_319/Final_Git/MN_5/Frontend/gametribe/src/context/AuthContext.jsx"],"sourcesContent":["import React, { createContext, useState, useEffect, useContext } from 'react';\r\nimport axios from 'axios';\r\n\r\n// API URL\r\nconst API_URL = process.env.REACT_APP_API_URL || 'http://localhost:5000';\r\n\r\n// Create the auth context\r\nconst AuthContext = createContext();\r\n\r\n// Custom hook to use the auth context\r\nexport const useAuth = () => {\r\n  return useContext(AuthContext);\r\n};\r\n\r\n// Provider component\r\nexport const AuthProvider = ({ children }) => {\r\n  const [currentUser, setCurrentUser] = useState(null);\r\n  const [loading, setLoading] = useState(true);\r\n  const [isAuthenticated, setIsAuthenticated] = useState(false);\r\n  const [error, setError] = useState(null);\r\n  const [token, setToken] = useState(localStorage.getItem('token'));\r\n  \r\n  // Set default auth header for all axios requests\r\n  useEffect(() => {\r\n    if (token) {\r\n      axios.defaults.headers.common['x-auth-token'] = token;\r\n    } else {\r\n      delete axios.defaults.headers.common['x-auth-token'];\r\n    }\r\n  }, [token]);\r\n  \r\n  // Load user data when token changes\r\n  useEffect(() => {\r\n    const loadUser = async () => {\r\n      if (!token) {\r\n        setCurrentUser(null);\r\n        setIsAuthenticated(false);\r\n        setLoading(false);\r\n        return;\r\n      }\r\n      \r\n      try {\r\n        setLoading(true);\r\n        const res = await axios.get(`${API_URL}/api/auth/user`);\r\n        \r\n        if (res.data) {\r\n          setCurrentUser(res.data);\r\n          setIsAuthenticated(true);\r\n        }\r\n      } catch (err) {\r\n        console.error('Error loading user:', err.response?.data?.message || err.message);\r\n        localStorage.removeItem('token');\r\n        setToken(null);\r\n        setCurrentUser(null);\r\n        setIsAuthenticated(false);\r\n        setError(err.response?.data?.message || 'Authentication error. Please login again.');\r\n      } finally {\r\n        setLoading(false);\r\n      }\r\n    };\r\n    \r\n    loadUser();\r\n  }, [token]);\r\n  \r\n  // Register a new user\r\n  const register = async (email, password, displayName, profileImage = '/assets/myotherimages/player_01.jpg') => {\r\n    try {\r\n      setLoading(true);\r\n      setError(null);\r\n      \r\n      const res = await axios.post(`${API_URL}/api/auth/register`, {\r\n        email,\r\n        password,\r\n        displayName,\r\n        profileImage\r\n      });\r\n      \r\n      // Save token to localStorage\r\n      localStorage.setItem('token', res.data.token);\r\n      setToken(res.data.token);\r\n      \r\n      // Set current user and authenticate\r\n      setCurrentUser(res.data.user);\r\n      setIsAuthenticated(true);\r\n      \r\n      return res.data.user;\r\n    } catch (err) {\r\n      console.error('Registration error:', err.response?.data?.message || err.message);\r\n      setError(err.response?.data?.message || 'Registration failed. Please try again.');\r\n      throw new Error(err.response?.data?.message || 'Registration failed. Please try again.');\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n  \r\n  // Login an existing user\r\n  const login = async (email, password) => {\r\n    try {\r\n      setLoading(true);\r\n      setError(null);\r\n      \r\n      const res = await axios.post(`${API_URL}/api/auth/login`, {\r\n        email,\r\n        password\r\n      });\r\n      \r\n      // Save token to localStorage\r\n      localStorage.setItem('token', res.data.token);\r\n      setToken(res.data.token);\r\n      \r\n      // Set current user and authenticate\r\n      setCurrentUser(res.data.user);\r\n      setIsAuthenticated(true);\r\n      \r\n      return res.data.user;\r\n    } catch (err) {\r\n      console.error('Login error:', err.response?.data?.message || err.message);\r\n      setError(err.response?.data?.message || 'Login failed. Please check your credentials.');\r\n      throw new Error(err.response?.data?.message || 'Login failed. Please check your credentials.');\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n  \r\n  // Logout the current user\r\n  const logout = () => {\r\n    // Remove token from localStorage\r\n    localStorage.removeItem('token');\r\n    setToken(null);\r\n    \r\n    // Clear user state\r\n    setCurrentUser(null);\r\n    setIsAuthenticated(false);\r\n  };\r\n  \r\n  // Update user profile\r\n  const updateProfile = async (updates) => {\r\n    try {\r\n      setLoading(true);\r\n      setError(null);\r\n      \r\n      const res = await axios.put(`${API_URL}/api/users/profile`, updates);\r\n      \r\n      // Update user in state\r\n      setCurrentUser(res.data);\r\n      \r\n      return res.data;\r\n    } catch (err) {\r\n      console.error('Profile update error:', err.response?.data?.message || err.message);\r\n      setError(err.response?.data?.message || 'Failed to update profile. Please try again.');\r\n      throw new Error(err.response?.data?.message || 'Failed to update profile. Please try again.');\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n  \r\n  // Get user's orders - only if authenticated\r\n  const getUserOrders = async () => {\r\n    if (!isAuthenticated || !token) {\r\n      return [];\r\n    }\r\n    \r\n    try {\r\n      const res = await axios.get(`${API_URL}/api/orders`);\r\n      return res.data;\r\n    } catch (err) {\r\n      console.error('Error fetching orders:', err.response?.data?.message || err.message);\r\n      // Return empty array instead of throwing error\r\n      return [];\r\n    }\r\n  };\r\n  \r\n  // Add a new order\r\n  const addOrder = async (orderData) => {\r\n    try {\r\n      setError(null);\r\n      \r\n      const res = await axios.post(`${API_URL}/api/orders`, orderData);\r\n      \r\n      return res.data;\r\n    } catch (err) {\r\n      console.error('Order creation error:', err.response?.data?.message || err.message);\r\n      setError(err.response?.data?.message || 'Failed to place order. Please try again.');\r\n      throw new Error(err.response?.data?.message || 'Failed to place order. Please try again.');\r\n    }\r\n  };\r\n  \r\n  // Add a game to favorites\r\n  const addToFavorites = async (gameId) => {\r\n    try {\r\n      setError(null);\r\n      \r\n      const res = await axios.post(`${API_URL}/api/users/favorite/${gameId}`);\r\n      \r\n      // Update user in state to reflect new favorites\r\n      const updatedUser = await axios.get(`${API_URL}/api/auth/user`);\r\n      setCurrentUser(updatedUser.data);\r\n      \r\n      return res.data;\r\n    } catch (err) {\r\n      console.error('Error adding to favorites:', err.response?.data?.message || err.message);\r\n      setError(err.response?.data?.message || 'Failed to add game to favorites. Please try again.');\r\n      throw new Error(err.response?.data?.message || 'Failed to add game to favorites. Please try again.');\r\n    }\r\n  };\r\n  \r\n  // Remove a game from favorites\r\n  const removeFromFavorites = async (gameId) => {\r\n    try {\r\n      setError(null);\r\n      \r\n      const res = await axios.delete(`${API_URL}/api/users/favorite/${gameId}`);\r\n      \r\n      // Update user in state to reflect updated favorites\r\n      const updatedUser = await axios.get(`${API_URL}/api/auth/user`);\r\n      setCurrentUser(updatedUser.data);\r\n      \r\n      return res.data;\r\n    } catch (err) {\r\n      console.error('Error removing from favorites:', err.response?.data?.message || err.message);\r\n      setError(err.response?.data?.message || 'Failed to remove game from favorites. Please try again.');\r\n      throw new Error(err.response?.data?.message || 'Failed to remove game from favorites. Please try again.');\r\n    }\r\n  };\r\n  \r\n  // Change password\r\n  const changePassword = async (currentPassword, newPassword) => {\r\n    try {\r\n      setError(null);\r\n      \r\n      const res = await axios.put(`${API_URL}/api/users/password`, {\r\n        currentPassword,\r\n        newPassword\r\n      });\r\n      \r\n      return res.data;\r\n    } catch (err) {\r\n      console.error('Password change error:', err.response?.data?.message || err.message);\r\n      setError(err.response?.data?.message || 'Failed to change password. Please try again.');\r\n      throw new Error(err.response?.data?.message || 'Failed to change password. Please try again.');\r\n    }\r\n  };\r\n  \r\n  // Context value\r\n  const value = {\r\n    currentUser,\r\n    isAuthenticated,\r\n    loading,\r\n    error,\r\n    register,\r\n    login,\r\n    logout,\r\n    updateProfile,\r\n    getUserOrders,\r\n    addOrder,\r\n    addToFavorites,\r\n    removeFromFavorites,\r\n    changePassword\r\n  };\r\n  \r\n  return (\r\n    <AuthContext.Provider value={value}>\r\n      {children}\r\n    </AuthContext.Provider>\r\n  );\r\n};\r\n\r\nexport default AuthProvider;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}