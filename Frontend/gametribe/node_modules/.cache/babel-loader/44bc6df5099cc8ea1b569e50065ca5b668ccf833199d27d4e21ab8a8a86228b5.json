{"ast":null,"code":"import axios from 'axios';\n\n// API base URL (remove trailing slash)\nconst API_URL = process.env.REACT_APP_API_URL || 'http://localhost:5000';\n\n// Create axios instance with default config\nconst api = axios.create({\n  baseURL: API_URL,\n  headers: {\n    'Content-Type': 'application/json'\n  }\n});\n\n// Intercept requests to add auth token\napi.interceptors.request.use(config => {\n  const token = localStorage.getItem('token');\n  if (token) {\n    config.headers['x-auth-token'] = token;\n  }\n  return config;\n}, error => {\n  return Promise.reject(error);\n});\n\n// Intercept responses to handle auth errors\napi.interceptors.response.use(response => response, error => {\n  // Handle 401 (Unauthorized) responses\n  if (error.response && error.response.status === 401) {\n    // Clear token and redirect to login\n    localStorage.removeItem('token');\n    window.location.href = '/login'; // Fixed the redirect path\n  }\n  return Promise.reject(error);\n});\n\n// Admin services - ADD THIS SECTION\nexport const adminService = {\n  getDashboardStats: async () => {\n    const response = await api.get('/api/admin/dashboard');\n    return response.data;\n  },\n  getAllUsers: async () => {\n    const response = await api.get('/api/admin/users');\n    return response.data;\n  },\n  updateUser: async (userId, updates) => {\n    const response = await api.put(`/api/admin/users/${userId}`, updates);\n    return response.data;\n  },\n  getAllOrders: async () => {\n    const response = await api.get('/api/admin/orders');\n    return response.data;\n  },\n  updateOrderStatus: async (orderId, status) => {\n    const response = await api.put(`/api/admin/orders/${orderId}/status`, {\n      status\n    });\n    return response.data;\n  }\n};\n\n// Auth services\nexport const authService = {\n  register: async userData => {\n    const response = await api.post('/api/auth/register', userData);\n    return response.data;\n  },\n  login: async credentials => {\n    const response = await api.post('/api/auth/login', credentials);\n    return response.data;\n  },\n  getCurrentUser: async () => {\n    const response = await api.get('/api/auth/user');\n    return response.data;\n  }\n};\n\n// Game services\nexport const gameService = {\n  getAllGames: async () => {\n    const response = await api.get('/api/games');\n    return response.data;\n  },\n  getGameById: async id => {\n    const response = await api.get(`/api/games/${id}`);\n    return response.data;\n  },\n  getNewReleases: async () => {\n    const response = await api.get('/api/games/new-releases');\n    return response.data;\n  },\n  getPopularGames: async () => {\n    const response = await api.get('/api/games/popular');\n    return response.data;\n  },\n  getGamesByGenre: async genre => {\n    const response = await api.get(`/api/games/genre/${genre}`);\n    return response.data;\n  }\n};\n\n// User services\nexport const userService = {\n  updateProfile: async updates => {\n    const response = await api.put('/api/users/profile', updates);\n    return response.data;\n  },\n  changePassword: async passwords => {\n    const response = await api.put('/api/users/password', passwords);\n    return response.data;\n  },\n  addToFavorites: async gameId => {\n    const response = await api.post(`/api/users/favorite/${gameId}`);\n    return response.data;\n  },\n  removeFromFavorites: async gameId => {\n    const response = await api.delete(`/api/users/favorite/${gameId}`);\n    return response.data;\n  }\n};\n\n// Order services\nexport const orderService = {\n  getUserOrders: async () => {\n    const response = await api.get('/api/orders');\n    return response.data;\n  },\n  getOrderById: async id => {\n    const response = await api.get(`/api/orders/${id}`);\n    return response.data;\n  },\n  createOrder: async orderData => {\n    const response = await api.post('/api/orders', orderData);\n    return response.data;\n  }\n};\nexport default api;","map":{"version":3,"names":["axios","API_URL","process","env","REACT_APP_API_URL","api","create","baseURL","headers","interceptors","request","use","config","token","localStorage","getItem","error","Promise","reject","response","status","removeItem","window","location","href","adminService","getDashboardStats","get","data","getAllUsers","updateUser","userId","updates","put","getAllOrders","updateOrderStatus","orderId","authService","register","userData","post","login","credentials","getCurrentUser","gameService","getAllGames","getGameById","id","getNewReleases","getPopularGames","getGamesByGenre","genre","userService","updateProfile","changePassword","passwords","addToFavorites","gameId","removeFromFavorites","delete","orderService","getUserOrders","getOrderById","createOrder","orderData"],"sources":["C:/se_319/Final_Git/MN_5/Frontend/gametribe/src/services/api.js"],"sourcesContent":["import axios from 'axios';\r\n\r\n// API base URL (remove trailing slash)\r\nconst API_URL = process.env.REACT_APP_API_URL || 'http://localhost:5000';\r\n\r\n// Create axios instance with default config\r\nconst api = axios.create({\r\n  baseURL: API_URL,\r\n  headers: {\r\n    'Content-Type': 'application/json'\r\n  }\r\n});\r\n\r\n// Intercept requests to add auth token\r\napi.interceptors.request.use(\r\n  config => {\r\n    const token = localStorage.getItem('token');\r\n    if (token) {\r\n      config.headers['x-auth-token'] = token;\r\n    }\r\n    return config;\r\n  },\r\n  error => {\r\n    return Promise.reject(error);\r\n  }\r\n);\r\n\r\n// Intercept responses to handle auth errors\r\napi.interceptors.response.use(\r\n  response => response,\r\n  error => {\r\n    // Handle 401 (Unauthorized) responses\r\n    if (error.response && error.response.status === 401) {\r\n      // Clear token and redirect to login\r\n      localStorage.removeItem('token');\r\n      window.location.href = '/login'; // Fixed the redirect path\r\n    }\r\n    return Promise.reject(error);\r\n  }\r\n);\r\n\r\n// Admin services - ADD THIS SECTION\r\nexport const adminService = {\r\n  getDashboardStats: async () => {\r\n    const response = await api.get('/api/admin/dashboard');\r\n    return response.data;\r\n  },\r\n  \r\n  getAllUsers: async () => {\r\n    const response = await api.get('/api/admin/users');\r\n    return response.data;\r\n  },\r\n  \r\n  updateUser: async (userId, updates) => {\r\n    const response = await api.put(`/api/admin/users/${userId}`, updates);\r\n    return response.data;\r\n  },\r\n  \r\n  getAllOrders: async () => {\r\n    const response = await api.get('/api/admin/orders');\r\n    return response.data;\r\n  },\r\n  \r\n  updateOrderStatus: async (orderId, status) => {\r\n    const response = await api.put(`/api/admin/orders/${orderId}/status`, { status });\r\n    return response.data;\r\n  }\r\n};\r\n\r\n// Auth services\r\nexport const authService = {\r\n  register: async (userData) => {\r\n    const response = await api.post('/api/auth/register', userData);\r\n    return response.data;\r\n  },\r\n  \r\n  login: async (credentials) => {\r\n    const response = await api.post('/api/auth/login', credentials);\r\n    return response.data;\r\n  },\r\n  \r\n  getCurrentUser: async () => {\r\n    const response = await api.get('/api/auth/user');\r\n    return response.data;\r\n  }\r\n};\r\n\r\n// Game services\r\nexport const gameService = {\r\n  getAllGames: async () => {\r\n    const response = await api.get('/api/games');\r\n    return response.data;\r\n  },\r\n  \r\n  getGameById: async (id) => {\r\n    const response = await api.get(`/api/games/${id}`);\r\n    return response.data;\r\n  },\r\n  \r\n  getNewReleases: async () => {\r\n    const response = await api.get('/api/games/new-releases');\r\n    return response.data;\r\n  },\r\n  \r\n  getPopularGames: async () => {\r\n    const response = await api.get('/api/games/popular');\r\n    return response.data;\r\n  },\r\n  \r\n  getGamesByGenre: async (genre) => {\r\n    const response = await api.get(`/api/games/genre/${genre}`);\r\n    return response.data;\r\n  }\r\n};\r\n\r\n// User services\r\nexport const userService = {\r\n  updateProfile: async (updates) => {\r\n    const response = await api.put('/api/users/profile', updates);\r\n    return response.data;\r\n  },\r\n  \r\n  changePassword: async (passwords) => {\r\n    const response = await api.put('/api/users/password', passwords);\r\n    return response.data;\r\n  },\r\n  \r\n  addToFavorites: async (gameId) => {\r\n    const response = await api.post(`/api/users/favorite/${gameId}`);\r\n    return response.data;\r\n  },\r\n  \r\n  removeFromFavorites: async (gameId) => {\r\n    const response = await api.delete(`/api/users/favorite/${gameId}`);\r\n    return response.data;\r\n  }\r\n};\r\n\r\n// Order services\r\nexport const orderService = {\r\n  getUserOrders: async () => {\r\n    const response = await api.get('/api/orders');\r\n    return response.data;\r\n  },\r\n  \r\n  getOrderById: async (id) => {\r\n    const response = await api.get(`/api/orders/${id}`);\r\n    return response.data;\r\n  },\r\n  \r\n  createOrder: async (orderData) => {\r\n    const response = await api.post('/api/orders', orderData);\r\n    return response.data;\r\n  }\r\n};\r\n\r\nexport default api;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}