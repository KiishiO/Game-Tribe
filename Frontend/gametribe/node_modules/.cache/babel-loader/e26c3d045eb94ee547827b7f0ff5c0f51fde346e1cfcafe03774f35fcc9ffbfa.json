{"ast":null,"code":"var _jsxFileName = \"C:\\\\se_319\\\\Final_Git\\\\MN_5\\\\Frontend\\\\gametribe\\\\src\\\\context\\\\CartContext.jsx\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useState, useEffect, useContext } from 'react';\nimport axios from 'axios';\n\n// API URL\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst API_URL = process.env.REACT_APP_API_URL || 'http://localhost:5000/api';\n\n// Create the context\nconst CartContext = /*#__PURE__*/createContext();\n\n// Custom hook to use the cart context\nexport const useCart = () => {\n  _s();\n  return useContext(CartContext);\n};\n\n// Provider component\n_s(useCart, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\nexport const CartProvider = ({\n  children\n}) => {\n  _s2();\n  const [cartItems, setCartItems] = useState([]);\n  const [recentlyViewed, setRecentlyViewed] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n\n  // Load cart from localStorage on component mount\n  useEffect(() => {\n    const storedCart = localStorage.getItem('cart');\n    const storedRecentlyViewed = localStorage.getItem('recentlyViewed');\n    if (storedCart) setCartItems(JSON.parse(storedCart));\n    if (storedRecentlyViewed) setRecentlyViewed(JSON.parse(storedRecentlyViewed));\n  }, []);\n\n  // Save cart to localStorage whenever it changes\n  useEffect(() => {\n    localStorage.setItem('cart', JSON.stringify(cartItems));\n  }, [cartItems]);\n\n  // Save recently viewed to localStorage whenever it changes\n  useEffect(() => {\n    localStorage.setItem('recentlyViewed', JSON.stringify(recentlyViewed));\n  }, [recentlyViewed]);\n\n  // Add item to cart\n  const addToCart = async game => {\n    try {\n      setError(null);\n\n      // Check if the game data is complete\n      if (!game.id && game._id) {\n        // If using MongoDB _id, convert to id for consistency\n        game = {\n          ...game,\n          id: game._id\n        };\n      }\n\n      // Check if item already in cart\n      const existingItemIndex = cartItems.findIndex(item => item.id && item.id === game.id || item._id && item._id === game._id);\n      if (existingItemIndex > -1) {\n        // Update quantity if item exists\n        const updatedItems = [...cartItems];\n        updatedItems[existingItemIndex] = {\n          ...updatedItems[existingItemIndex],\n          quantity: updatedItems[existingItemIndex].quantity + 1\n        };\n        setCartItems(updatedItems);\n      } else {\n        // Add new item with quantity 1\n        setCartItems([...cartItems, {\n          ...game,\n          quantity: 1\n        }]);\n      }\n\n      // Show notification\n      showNotification(`${game.name} has been added to your cart!`);\n      return true;\n    } catch (err) {\n      console.error('Error adding to cart:', err);\n      setError('Failed to add item to cart');\n      return false;\n    }\n  };\n\n  // Remove item from cart\n  const removeFromCart = id => {\n    setCartItems(prevItems => prevItems.filter(item => item.id !== id && item._id !== id));\n  };\n\n  // Update item quantity\n  const updateQuantity = (id, quantity) => {\n    if (quantity < 1) {\n      removeFromCart(id);\n      return;\n    }\n    setCartItems(prevItems => prevItems.map(item => item.id === id || item._id === id ? {\n      ...item,\n      quantity\n    } : item));\n  };\n\n  // Clear cart\n  const clearCart = () => {\n    setCartItems([]);\n  };\n\n  // Add to recently viewed\n  const addToRecentlyViewed = async game => {\n    try {\n      setError(null);\n\n      // Check if the game data is complete\n      if (!game.id && game._id) {\n        // If using MongoDB _id, convert to id for consistency\n        game = {\n          ...game,\n          id: game._id\n        };\n      }\n      setRecentlyViewed(prevItems => {\n        // Remove if already in list\n        const filteredItems = prevItems.filter(item => item.id !== game.id && item._id !== game._id);\n\n        // Add to beginning of array and keep only most recent 4\n        return [game, ...filteredItems].slice(0, 4);\n      });\n      return true;\n    } catch (err) {\n      console.error('Error adding to recently viewed:', err);\n      setError('Failed to add item to recently viewed');\n      return false;\n    }\n  };\n\n  // Show notification\n  const showNotification = message => {\n    const notification = document.createElement('div');\n    notification.classList.add('cart-notification', 'show');\n    notification.innerHTML = `\n      <div class=\"notification-content\">\n        <i class=\"fas fa-check-circle\"></i>\n        <span>${message}</span>\n      </div>\n    `;\n\n    // Add CSS for the notification if not already present\n    if (!document.querySelector('style[data-notification]')) {\n      const style = document.createElement('style');\n      style.setAttribute('data-notification', 'true');\n      style.textContent = `\n        .cart-notification {\n          position: fixed;\n          bottom: 20px;\n          right: 20px;\n          background-color: #28a745;\n          color: white;\n          padding: 15px 20px;\n          border-radius: 8px;\n          box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);\n          z-index: 1000;\n          opacity: 0;\n          transform: translateY(20px);\n          transition: all 0.3s ease;\n        }\n        \n        .cart-notification.show {\n          opacity: 1;\n          transform: translateY(0);\n        }\n        \n        .notification-content {\n          display: flex;\n          align-items: center;\n          gap: 10px;\n        }\n        \n        .notification-content i {\n          font-size: 1.2rem;\n        }\n      `;\n      document.head.appendChild(style);\n    }\n    document.body.appendChild(notification);\n\n    // Remove notification after 3 seconds\n    setTimeout(() => {\n      notification.classList.remove('show');\n      setTimeout(() => notification.remove(), 300);\n    }, 3000);\n  };\n\n  // Calculate cart total\n  const getCartTotal = () => {\n    return cartItems.reduce((total, item) => total + item.price * item.quantity, 0);\n  };\n\n  // Get cart item count\n  const getCartCount = () => {\n    return cartItems.reduce((count, item) => count + item.quantity, 0);\n  };\n\n  // Fetch games from API\n  const fetchGames = async () => {\n    try {\n      setLoading(true);\n      setError(null);\n      const response = await axios.get(`${API_URL}/games`);\n      return response.data;\n    } catch (err) {\n      console.error('Error fetching games:', err);\n      setError('Failed to fetch games');\n      return [];\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  // Fetch game by ID from API\n  const fetchGameById = async id => {\n    try {\n      setLoading(true);\n      setError(null);\n      const response = await axios.get(`${API_URL}/games/${id}`);\n      return response.data;\n    } catch (err) {\n      console.error(`Error fetching game with ID ${id}:`, err);\n      setError(`Failed to fetch game with ID ${id}`);\n      return null;\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  // Fetch new releases from API\n  const fetchNewReleases = async () => {\n    try {\n      setLoading(true);\n      setError(null);\n      const response = await axios.get(`${API_URL}/games`);\n      const games = response.data;\n\n      // Filter for new releases\n      const newReleases = games.filter(game => game.isNewRelease === true);\n      return newReleases;\n    } catch (err) {\n      console.error('Error fetching new releases:', err);\n      setError('Failed to fetch new releases');\n      return [];\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  // Fetch popular games from API\n  const fetchPopularGames = async () => {\n    try {\n      setLoading(true);\n      setError(null);\n      const response = await axios.get(`${API_URL}/games`);\n      const games = response.data;\n\n      // Filter for popular games\n      const popularGames = games.filter(game => game.isPopular === true);\n      return popularGames;\n    } catch (err) {\n      console.error('Error fetching popular games:', err);\n      setError('Failed to fetch popular games');\n      return [];\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  // Context value\n  const value = {\n    cartItems,\n    recentlyViewed,\n    loading,\n    error,\n    addToCart,\n    removeFromCart,\n    updateQuantity,\n    clearCart,\n    addToRecentlyViewed,\n    getCartTotal,\n    getCartCount,\n    fetchGames,\n    fetchGameById,\n    fetchNewReleases,\n    fetchPopularGames\n  };\n  return /*#__PURE__*/_jsxDEV(CartContext.Provider, {\n    value: value,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 300,\n    columnNumber: 5\n  }, this);\n};\n_s2(CartProvider, \"ZhjquWp1DSz6ORuyR35lvypdcNY=\");\n_c = CartProvider;\nexport default CartProvider;\nvar _c;\n$RefreshReg$(_c, \"CartProvider\");","map":{"version":3,"names":["React","createContext","useState","useEffect","useContext","axios","jsxDEV","_jsxDEV","API_URL","process","env","REACT_APP_API_URL","CartContext","useCart","_s","CartProvider","children","_s2","cartItems","setCartItems","recentlyViewed","setRecentlyViewed","loading","setLoading","error","setError","storedCart","localStorage","getItem","storedRecentlyViewed","JSON","parse","setItem","stringify","addToCart","game","id","_id","existingItemIndex","findIndex","item","updatedItems","quantity","showNotification","name","err","console","removeFromCart","prevItems","filter","updateQuantity","map","clearCart","addToRecentlyViewed","filteredItems","slice","message","notification","document","createElement","classList","add","innerHTML","querySelector","style","setAttribute","textContent","head","appendChild","body","setTimeout","remove","getCartTotal","reduce","total","price","getCartCount","count","fetchGames","response","get","data","fetchGameById","fetchNewReleases","games","newReleases","isNewRelease","fetchPopularGames","popularGames","isPopular","value","Provider","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/se_319/Final_Git/MN_5/Frontend/gametribe/src/context/CartContext.jsx"],"sourcesContent":["import React, { createContext, useState, useEffect, useContext } from 'react';\r\nimport axios from 'axios';\r\n\r\n// API URL\r\nconst API_URL = process.env.REACT_APP_API_URL || 'http://localhost:5000/api';\r\n\r\n// Create the context\r\nconst CartContext = createContext();\r\n\r\n// Custom hook to use the cart context\r\nexport const useCart = () => {\r\n  return useContext(CartContext);\r\n};\r\n\r\n// Provider component\r\nexport const CartProvider = ({ children }) => {\r\n  const [cartItems, setCartItems] = useState([]);\r\n  const [recentlyViewed, setRecentlyViewed] = useState([]);\r\n  const [loading, setLoading] = useState(false);\r\n  const [error, setError] = useState(null);\r\n  \r\n  // Load cart from localStorage on component mount\r\n  useEffect(() => {\r\n    const storedCart = localStorage.getItem('cart');\r\n    const storedRecentlyViewed = localStorage.getItem('recentlyViewed');\r\n    \r\n    if (storedCart) setCartItems(JSON.parse(storedCart));\r\n    if (storedRecentlyViewed) setRecentlyViewed(JSON.parse(storedRecentlyViewed));\r\n  }, []);\r\n  \r\n  // Save cart to localStorage whenever it changes\r\n  useEffect(() => {\r\n    localStorage.setItem('cart', JSON.stringify(cartItems));\r\n  }, [cartItems]);\r\n  \r\n  // Save recently viewed to localStorage whenever it changes\r\n  useEffect(() => {\r\n    localStorage.setItem('recentlyViewed', JSON.stringify(recentlyViewed));\r\n  }, [recentlyViewed]);\r\n  \r\n  // Add item to cart\r\n  const addToCart = async (game) => {\r\n    try {\r\n      setError(null);\r\n      \r\n      // Check if the game data is complete\r\n      if (!game.id && game._id) {\r\n        // If using MongoDB _id, convert to id for consistency\r\n        game = { ...game, id: game._id };\r\n      }\r\n      \r\n      // Check if item already in cart\r\n      const existingItemIndex = cartItems.findIndex(item => \r\n        (item.id && item.id === game.id) || (item._id && item._id === game._id)\r\n      );\r\n      \r\n      if (existingItemIndex > -1) {\r\n        // Update quantity if item exists\r\n        const updatedItems = [...cartItems];\r\n        updatedItems[existingItemIndex] = {\r\n          ...updatedItems[existingItemIndex],\r\n          quantity: updatedItems[existingItemIndex].quantity + 1\r\n        };\r\n        setCartItems(updatedItems);\r\n      } else {\r\n        // Add new item with quantity 1\r\n        setCartItems([...cartItems, { ...game, quantity: 1 }]);\r\n      }\r\n      \r\n      // Show notification\r\n      showNotification(`${game.name} has been added to your cart!`);\r\n      \r\n      return true;\r\n    } catch (err) {\r\n      console.error('Error adding to cart:', err);\r\n      setError('Failed to add item to cart');\r\n      return false;\r\n    }\r\n  };\r\n  \r\n  // Remove item from cart\r\n  const removeFromCart = (id) => {\r\n    setCartItems(prevItems => prevItems.filter(item => \r\n      (item.id !== id) && (item._id !== id)\r\n    ));\r\n  };\r\n  \r\n  // Update item quantity\r\n  const updateQuantity = (id, quantity) => {\r\n    if (quantity < 1) {\r\n      removeFromCart(id);\r\n      return;\r\n    }\r\n    \r\n    setCartItems(prevItems => \r\n      prevItems.map(item => \r\n        (item.id === id || item._id === id) ? { ...item, quantity } : item\r\n      )\r\n    );\r\n  };\r\n  \r\n  // Clear cart\r\n  const clearCart = () => {\r\n    setCartItems([]);\r\n  };\r\n  \r\n  // Add to recently viewed\r\n  const addToRecentlyViewed = async (game) => {\r\n    try {\r\n      setError(null);\r\n      \r\n      // Check if the game data is complete\r\n      if (!game.id && game._id) {\r\n        // If using MongoDB _id, convert to id for consistency\r\n        game = { ...game, id: game._id };\r\n      }\r\n      \r\n      setRecentlyViewed(prevItems => {\r\n        // Remove if already in list\r\n        const filteredItems = prevItems.filter(item => \r\n          (item.id !== game.id) && (item._id !== game._id)\r\n        );\r\n        \r\n        // Add to beginning of array and keep only most recent 4\r\n        return [game, ...filteredItems].slice(0, 4);\r\n      });\r\n      \r\n      return true;\r\n    } catch (err) {\r\n      console.error('Error adding to recently viewed:', err);\r\n      setError('Failed to add item to recently viewed');\r\n      return false;\r\n    }\r\n  };\r\n  \r\n  // Show notification\r\n  const showNotification = (message) => {\r\n    const notification = document.createElement('div');\r\n    notification.classList.add('cart-notification', 'show');\r\n    notification.innerHTML = `\r\n      <div class=\"notification-content\">\r\n        <i class=\"fas fa-check-circle\"></i>\r\n        <span>${message}</span>\r\n      </div>\r\n    `;\r\n    \r\n    // Add CSS for the notification if not already present\r\n    if (!document.querySelector('style[data-notification]')) {\r\n      const style = document.createElement('style');\r\n      style.setAttribute('data-notification', 'true');\r\n      style.textContent = `\r\n        .cart-notification {\r\n          position: fixed;\r\n          bottom: 20px;\r\n          right: 20px;\r\n          background-color: #28a745;\r\n          color: white;\r\n          padding: 15px 20px;\r\n          border-radius: 8px;\r\n          box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);\r\n          z-index: 1000;\r\n          opacity: 0;\r\n          transform: translateY(20px);\r\n          transition: all 0.3s ease;\r\n        }\r\n        \r\n        .cart-notification.show {\r\n          opacity: 1;\r\n          transform: translateY(0);\r\n        }\r\n        \r\n        .notification-content {\r\n          display: flex;\r\n          align-items: center;\r\n          gap: 10px;\r\n        }\r\n        \r\n        .notification-content i {\r\n          font-size: 1.2rem;\r\n        }\r\n      `;\r\n      document.head.appendChild(style);\r\n    }\r\n    \r\n    document.body.appendChild(notification);\r\n    \r\n    // Remove notification after 3 seconds\r\n    setTimeout(() => {\r\n      notification.classList.remove('show');\r\n      setTimeout(() => notification.remove(), 300);\r\n    }, 3000);\r\n  };\r\n  \r\n  // Calculate cart total\r\n  const getCartTotal = () => {\r\n    return cartItems.reduce((total, item) => total + (item.price * item.quantity), 0);\r\n  };\r\n  \r\n  // Get cart item count\r\n  const getCartCount = () => {\r\n    return cartItems.reduce((count, item) => count + item.quantity, 0);\r\n  };\r\n  \r\n  // Fetch games from API\r\n  const fetchGames = async () => {\r\n    try {\r\n      setLoading(true);\r\n      setError(null);\r\n      \r\n      const response = await axios.get(`${API_URL}/games`);\r\n      return response.data;\r\n    } catch (err) {\r\n      console.error('Error fetching games:', err);\r\n      setError('Failed to fetch games');\r\n      return [];\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n  \r\n  // Fetch game by ID from API\r\n  const fetchGameById = async (id) => {\r\n    try {\r\n      setLoading(true);\r\n      setError(null);\r\n      \r\n      const response = await axios.get(`${API_URL}/games/${id}`);\r\n      return response.data;\r\n    } catch (err) {\r\n      console.error(`Error fetching game with ID ${id}:`, err);\r\n      setError(`Failed to fetch game with ID ${id}`);\r\n      return null;\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n  \r\n  // Fetch new releases from API\r\n  const fetchNewReleases = async () => {\r\n    try {\r\n      setLoading(true);\r\n      setError(null);\r\n      \r\n      const response = await axios.get(`${API_URL}/games`);\r\n      const games = response.data;\r\n      \r\n      // Filter for new releases\r\n      const newReleases = games.filter(game => game.isNewRelease === true);\r\n      return newReleases;\r\n    } catch (err) {\r\n      console.error('Error fetching new releases:', err);\r\n      setError('Failed to fetch new releases');\r\n      return [];\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n  \r\n  // Fetch popular games from API\r\n  const fetchPopularGames = async () => {\r\n    try {\r\n      setLoading(true);\r\n      setError(null);\r\n      \r\n      const response = await axios.get(`${API_URL}/games`);\r\n      const games = response.data;\r\n      \r\n      // Filter for popular games\r\n      const popularGames = games.filter(game => game.isPopular === true);\r\n      return popularGames;\r\n    } catch (err) {\r\n      console.error('Error fetching popular games:', err);\r\n      setError('Failed to fetch popular games');\r\n      return [];\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n  \r\n  // Context value\r\n  const value = {\r\n    cartItems,\r\n    recentlyViewed,\r\n    loading,\r\n    error,\r\n    addToCart,\r\n    removeFromCart,\r\n    updateQuantity,\r\n    clearCart,\r\n    addToRecentlyViewed,\r\n    getCartTotal,\r\n    getCartCount,\r\n    fetchGames,\r\n    fetchGameById,\r\n    fetchNewReleases,\r\n    fetchPopularGames\r\n  };\r\n  \r\n  return (\r\n    <CartContext.Provider value={value}>\r\n      {children}\r\n    </CartContext.Provider>\r\n  );\r\n};\r\n\r\nexport default CartProvider;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}